
import tkinter as tk
from tkinter import ttk, messagebox, filedialog
from tkcalendar import DateEntry
import pandas as pd
import os

class ExcelEntryApp:
    def __init__(self, root):
        self.root = root
        self.root.title("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Excel")
        self.entries = {}
        self.excel_file = None

        # –ü–æ–ª—è —Ñ–æ—Ä–º—ã
        fields = [
            "–ü–æ–ª–Ω–æ–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ", "–§–ò–û_—Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π", "–§–ò–û_—Å–æ–∫—Ä–∞—â", "–ø–æ–ª–Ω—ã–π_—Ç–∏–ø_–æ–±—ä–µ–∫—Ç–∞",
            "–ö–æ—Ä–æ—Ç–∫–æ–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ", "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π_–∞–¥—Ä–µ—Å", "–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π_–∞–¥—Ä–µ—Å", "–ò–ù–ù", "–û–ì–†–ù",
            "–ö–ü–ü", "–ë–∞–Ω–∫", "–ö–æ—Ä_—Å—á–µ—Ç", "–ë–ò–ö", "–û–ö–ü–û", "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è_–ø–µ—Ä—Å–æ–Ω–∞", "–ù–æ–º–µ—Ä", 
            "–î–∞—Ç–∞_–∞—Ä–µ–Ω–¥—ã", "–î–∞—Ç–∞"
        ]

        bank_options = ["–ü–ê–û –°–ë–ï–†–ë–ê–ù–ö", "–í–¢–ë", "–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫", "–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫", "–¢–∏–Ω—å–∫–æ—Ñ—Ñ"]
        person_options = ["–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä", "–ü–æ–º–æ—â–Ω–∏–∫", "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"]

        for field in fields:
            label = tk.Label(root, text=field.replace("_", " "))
            label.pack()

            if field == "–ë–∞–Ω–∫":
                entry = ttk.Combobox(root, values=bank_options, width=67)
            elif field == "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è_–ø–µ—Ä—Å–æ–Ω–∞":
                entry = ttk.Combobox(root, values=person_options, width=67)
            elif "–î–∞—Ç–∞" in field:
                entry = DateEntry(root, width=67, date_pattern="dd.mm.yyyy")
            else:
                entry = tk.Entry(root, width=70)

            entry.pack()
            self.entries[field] = entry

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        btn_frame = tk.Frame(root)
        btn_frame.pack(pady=10)

        tk.Button(btn_frame, text="üìÇ –í—ã–±—Ä–∞—Ç—å Excel-—Ñ–∞–π–ª", command=self.choose_file).pack(side=tk.LEFT, padx=5)
        tk.Button(btn_frame, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫...", command=self.save_as).pack(side=tk.LEFT, padx=5)
        tk.Button(btn_frame, text="‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å", command=self.save_to_excel, bg="lightgreen").pack(side=tk.LEFT, padx=5)

    def choose_file(self):
        path = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx")])
        if path:
            self.excel_file = path
            messagebox.showinfo("–§–∞–π–ª –≤—ã–±—Ä–∞–Ω", f"–¢–µ–∫—É—â–∏–π —Ñ–∞–π–ª:{self.excel_file}")

    def save_as(self):
        path = filedialog.asksaveasfilename(defaultextension=".xlsx", filetypes=[("Excel files", "*.xlsx")])
        if path:
            self.excel_file = path
            messagebox.showinfo("–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω", f"–ë—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤:{self.excel_file}")

    def save_to_excel(self):
        if not self.excel_file:
            messagebox.showwarning("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ Excel-—Ñ–∞–π–ª –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º.")
            return

        new_data = {k: v.get() for k, v in self.entries.items()}
        new_row = pd.DataFrame([new_data])

        if os.path.exists(self.excel_file):
            try:
                df = pd.read_excel(self.excel_file)
                df = pd.concat([df, new_row], ignore_index=True)
            except:
                df = new_row
        else:
            df = new_row

        df.to_excel(self.excel_file, index=False)
        os.startfile(self.excel_file)
        messagebox.showinfo("–ì–æ—Ç–æ–≤–æ", f"–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª:{self.excel_file}")

        for entry in self.entries.values():
            entry.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = ExcelEntryApp(root)
    root.mainloop()
